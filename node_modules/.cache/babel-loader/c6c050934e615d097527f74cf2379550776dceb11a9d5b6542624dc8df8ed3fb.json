{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lester\\\\Programaci\\xF3n\\\\Project_Finanzas\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // { name: '...', password: '...' }\n  const [users, setUsers] = useState(() => {\n    // Load users from localStorage on initial load\n    const storedUsers = localStorage.getItem('app_users');\n    return storedUsers ? JSON.parse(storedUsers) : [{\n      name: 'admin',\n      password: 'admin'\n    }];\n  });\n\n  // Save users to localStorage whenever the users state changes\n  useEffect(() => {\n    localStorage.setItem('app_users', JSON.stringify(users));\n  }, [users]);\n\n  // Attempt to auto-login if a user was previously logged in (simple persistence)\n  useEffect(() => {\n    const lastLoggedInUser = localStorage.getItem('last_logged_in_user');\n    if (lastLoggedInUser) {\n      const foundUser = users.find(u => u.name === lastLoggedInUser);\n      if (foundUser) {\n        setUser(foundUser);\n      }\n    }\n  }, [users]);\n  const login = (name, password) => {\n    const foundUser = users.find(u => u.name === name && u.password === password);\n    if (foundUser) {\n      setUser(foundUser);\n      localStorage.setItem('last_logged_in_user', name); // Remember last logged in user\n      return true;\n    }\n    return false;\n  };\n  const register = (name, password) => {\n    if (users.some(u => u.name === name)) {\n      return false; // User already exists\n    }\n    const newUser = {\n      name,\n      password\n    };\n    setUsers([...users, newUser]);\n    setUser(newUser); // Log in the new user immediately\n    localStorage.setItem('last_logged_in_user', name);\n    return true;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('last_logged_in_user'); // Clear last logged in user\n  };\n  const changePassword = (oldPassword, newPassword) => {\n    if (user && user.password === oldPassword) {\n      const updatedUsers = users.map(u => u.name === user.name ? {\n        ...u,\n        password: newPassword\n      } : u);\n      setUsers(updatedUsers);\n      setUser({\n        ...user,\n        password: newPassword\n      }); // Update current user's password\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      changePassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"8qXHXKhrdg1viwsKBntL2FRSSK0=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","users","setUsers","storedUsers","localStorage","getItem","JSON","parse","name","password","setItem","stringify","lastLoggedInUser","foundUser","find","u","login","register","some","newUser","logout","removeItem","changePassword","oldPassword","newPassword","updatedUsers","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Lester/ProgramaciÃ³n/Project_Finanzas/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // { name: '...', password: '...' }\n  const [users, setUsers] = useState(() => {\n    // Load users from localStorage on initial load\n    const storedUsers = localStorage.getItem('app_users');\n    return storedUsers ? JSON.parse(storedUsers) : [{ name: 'admin', password: 'admin' }];\n  });\n\n  // Save users to localStorage whenever the users state changes\n  useEffect(() => {\n    localStorage.setItem('app_users', JSON.stringify(users));\n  }, [users]);\n\n  // Attempt to auto-login if a user was previously logged in (simple persistence)\n  useEffect(() => {\n    const lastLoggedInUser = localStorage.getItem('last_logged_in_user');\n    if (lastLoggedInUser) {\n      const foundUser = users.find(u => u.name === lastLoggedInUser);\n      if (foundUser) {\n        setUser(foundUser);\n      }\n    }\n  }, [users]);\n\n  const login = (name, password) => {\n    const foundUser = users.find(u => u.name === name && u.password === password);\n    if (foundUser) {\n      setUser(foundUser);\n      localStorage.setItem('last_logged_in_user', name); // Remember last logged in user\n      return true;\n    }\n    return false;\n  };\n\n  const register = (name, password) => {\n    if (users.some(u => u.name === name)) {\n      return false; // User already exists\n    }\n    const newUser = { name, password };\n    setUsers([...users, newUser]);\n    setUser(newUser); // Log in the new user immediately\n    localStorage.setItem('last_logged_in_user', name);\n    return true;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('last_logged_in_user'); // Clear last logged in user\n  };\n\n  const changePassword = (oldPassword, newPassword) => {\n    if (user && user.password === oldPassword) {\n      const updatedUsers = users.map(u =>\n        u.name === user.name ? { ...u, password: newPassword } : u\n      );\n      setUsers(updatedUsers);\n      setUser({ ...user, password: newPassword }); // Update current user's password\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout, changePassword }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}